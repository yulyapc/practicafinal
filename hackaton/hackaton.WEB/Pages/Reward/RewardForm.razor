@using hackaton.shared.Entities

<h3>RewardForm</h3>

@inject IRepository repository

<EditForm Model="Reward" OnSubmit="OnSubmit">

<DataAnnotationsValidator />

    <div class="mb-3">
        <label>Nombre hackaton</label>
        <div>
            <InputSelect @bind-Value="Reward.HackatonID">
                @foreach (var hackaton in Hackatons)
                {
                    <option value="@hackaton.Id">@hackaton.Name</option>
                }
            </InputSelect>

        </div>

    </div>

<div class="mb-3">
        <label>Premio</label>
    <div>
            <InputText width="10" @bind-Value="Reward.Description" />
    </div>

</div>
    <button class="btn btn-primary" type="submit" >Guardar</button>
    <button class="btn btn-success" onclick="ReturnAction">Regresar</button>
</EditForm>



@code {

    [EditorRequired]
    [Parameter]
    public Reward Reward { get; set; }


    [EditorRequired]
    [Parameter]
    public EventCallback OnSubmit { get; set; }


    [EditorRequired]
    [Parameter]
    public EventCallback ReturnAction { get; set; }

    public List<Hackaton> Hackatons { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await LoadHackatons();
    }

    private async Task LoadHackatons()
    {
        var responseHppt = await repository.GetAsync<List<Hackaton>>("/api/hackatons");
        Hackatons = responseHppt.Response!;
    }

}
