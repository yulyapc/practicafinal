# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
# Para cuentas gratis el runtime de app service azure en el script del pipeline CI debe ser --runtime win-x86

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  proyectoAPI: hackaton/hackaton.api/hackaton.api.csproj
  proyectoBlazor: hackaton/hackaton.WEB/hackaton.WEB.csproj

steps:
- task: UseDotNet@2
  displayName: 'ASP.NET Core 8'
  inputs:
    packageType: 'sdk'
    version: '8.0.403'
    includePreviewVersions: true
    installationPath: 
# Compila el backend
- script: dotnet build --configuration $(buildConfiguration) $(proyectoAPI)
  displayName: 'dotnet build $(buildConfiguration)'
# Compila el frontend Blazor
- script: dotnet build --configuration $(buildConfiguration) $(proyectoBlazor)
  displayName: 'Build Frontend Blazor $(buildConfiguration)'
- task: CmdLine@2
  displayName: 'Installing EF Core CLI'
  inputs:
    script: 'dotnet tool install --global dotnet-ef --version 8.*'
- task: CmdLine@2
  displayName: 'Generating DB script'
  inputs:
    script: 'dotnet ef migrations script -i -o $(Build.ArtifactStagingDirectory)\migrate.sql --project $(proyecto)'
# Publica la api
- task: DotNetCoreCLI@2
  displayName: 'Publishing API...'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: $(proyectoAPI)
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/api --runtime win-x86 --self-contained true'
    zipAfterPublish: false
    modifyOutputPath: false
# Publica el frontend Blazor
- task: DotNetCoreCLI@2
  displayName: 'Publishing Blazor Frontend...'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: $(proyectoBlazor)
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/WEB --runtime win-x86 --self-contained true'
    zipAfterPublish: false
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: drop
